[{"/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/index.js":"1","/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/reportWebVitals.js":"2","/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/App.js":"3","/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/components/movie.js":"4","/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/components/add-review.js":"5","/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/components/movies-list.js":"6","/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/components/login.js":"7","/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/services/movies.js":"8"},{"size":671,"mtime":1696113537846,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1693874572449,"results":"11","hashOfConfig":"10"},{"size":1853,"mtime":1697329303075,"results":"12","hashOfConfig":"10"},{"size":3635,"mtime":1698802085661,"results":"13","hashOfConfig":"10"},{"size":2459,"mtime":1701052188153,"results":"14","hashOfConfig":"10"},{"size":6082,"mtime":1701231081069,"results":"15","hashOfConfig":"10"},{"size":1388,"mtime":1697419106502,"results":"16","hashOfConfig":"10"},{"size":951,"mtime":1701051730297,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1o2d10j",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/index.js",[],[],[],"/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/reportWebVitals.js",[],[],"/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/App.js",["45"],[],"import React from 'react'\nimport { Switch, Route, Link } from \"react-router-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport AddReview from './components/add-review'\nimport MoviesList from './components/movies-list'\nimport Movie from './components/movie'\nimport Login from './components/login'\n\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nfunction App() {\n  const [user, setUser] =React.useState(null)\n\n  async function login(user = null){// default user to null}\n    setUser(user)\n  }\n  async function logout(){\n    setUser(null)\n  }\n\n  return (\n      <div className='App'>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"home\">Movie Reviews</Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id=\"basic-navbar\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link> \n                <Link to={\"/movies\"}>Movies</Link>\n              </Nav.Link>\n              <Nav.Link>\n                { user ? (\n                  <a onClick={logout}>Logout User</a>\n                ) : (\n                  <Link to={\"/login\"}>Login</Link>\n                )}\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n                  \n        <Switch>\n          <Route exact path={[\"/\", \"/movies/\"]} component={MoviesList}>   \n          </Route>\n          <Route path=\"/movies/:id/review\" render={(props)=>\n          <AddReview {...props} user={user} />\n          }>\n          </Route>\n          <Route path=\"/movies/:id/\" render={(props)=>\n          <Movie {...props} user={user} />\n          }>\n          </Route>\n          <Route path=\"/login\" render={(props)=>\n          <Login {...props} login={login} />\n          }>\n          </Route>\n        </Switch>\n        </div>\n  )\n}\n\nexport default App;\n","/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/components/movie.js",[],[],"/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/components/add-review.js",[],[],"/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/components/movies-list.js",["46","47","48","49"],[],"import React, {useState, useEffect, useCallback} from \"react\"\nimport MovieDataService from \"../services/movies\"\nimport { Link } from \"react-router-dom\"\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container  from \"react-bootstrap/Container\";\nimport Card from 'react-bootstrap/Card';\n\nconst MoviesList = props => {\n    const [movies, setMovies] = useState([])\n    const [searchTitle, setSearchTitle] = useState(\"\")\n    const [searchRating, setSearchRating] = useState(\"\")\n    const [ratings, setRatings] = useState([\"All Ratings\"])\n\n    const [currentPage, setCurrentPage] = useState(0)\n    const [entriesPerPage, setEntriesPerPage] = useState(0)\n    const [currentSearchMode, setCurrentSearchMode] = useState(\"\")\n\n    useEffect(() => {\n        setCurrentPage(0)\n    }, [currentSearchMode])\n    \n    useEffect(() => {\n        retrieveNextPage()\n    },[currentPage])\n\n    const retrieveNextPage = () => {\n        if(currentSearchMode === \"findByTitle\")\n            findByTitle()\n        else if(currentSearchMode === \"findByRating\")\n            findByRating()\n        else\n            retrieveMovies()\n    }\n\n    useEffect(() => {\n        retrieveMovies();\n        retrieveRatings();\n    }, []);\n    \n    useEffect(() => {\n        retrieveMovies();\n    }, [currentPage]);\n\n    const retrieveMovies = () =>{\n        setCurrentSearchMode(\"findByTitle\")\n        MovieDataService.getAll(currentPage).then(response =>{\n            setMovies(response.data.movies)\n            setCurrentPage(response.data.page)\n            setEntriesPerPage(response.data.entries_per_page)\n        }).catch( e =>{\n            console.log(e)\n        })\n    }\n\n    const retrieveRatings = () =>{\n        setCurrentSearchMode(\"findByRating\")\n        MovieDataService.getRating().then(response =>{\n            console.log(response.data)\n            //start with 'All ratings' if user doesn't specify any ratings\n            setRatings([\"All Ratings\"].concat(response.data))\n        }).catch( e =>{\n            console.log(e)\n        })\n    }\n\n    const onChangeSearchTitle = e => {\n        const searchTitle = e.target.value\n        setSearchTitle(searchTitle);\n    }\n\n    const onChangeSearchRating = e => {\n        const searchRating = e.target.value\n        setSearchRating(searchRating);\n    }\n\n    const find = (query, by) => {\n        MovieDataService.find(query,by,currentPage).then(response =>{\n            console.log(response.data)\n            setMovies(response.data.movies)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n    const findByTitle = () => {\n        find(searchTitle, \"title\")\n    }\n    const findByRating = () => {\n        if(searchRating === \"All Ratings\"){\n            retrieveMovies()\n        }\n        else{\n            find(searchRating, \"rated\")\n        } \n    }\n\n    return (\n        <div className=\"App\">\n            <Container>\n                <Form>\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Control\n                                type=\"text\"\n                                placeholder=\"Search by title\"\n                                value={searchTitle}\n                                onChange={onChangeSearchTitle}\n                                />\n                            </Form.Group>\n                            <Button\n                                variant=\"primary\"\n                                type=\"button\"\n                                onClick={findByTitle}\n                            >\n                                Search\n                            </Button>\n                        </Col>\n                        <Col>\n                            <Form.Group>\n                                <Form.Control\n                                    as=\"select\" onChange={onChangeSearchRating} >\n                                        {ratings.map(rating =>{\n                                            return(\n                                                <option value={rating}>{rating}</option>\n                                            )\n                                        })}\n                                </Form.Control>\n                            </Form.Group>\n                            <Button\n                                variant=\"primary\"\n                                type=\"button\"\n                                onClick={findByRating}\n                            >\n                                Search\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n                    <Row>\n                        {movies.map((movie) =>{\n                            return(\n                                <Col>\n                                    <Card style={{ width: '18rem'}}>\n                                        <Card.Img src={movie.poster+\"/100px180\"}/>\n                                        <Card.Body>\n                                            <Card.Title>{movie.title}</Card.Title>\n                                            <Card.Text>\n                                                Rating: {movie.rated}\n                                            </Card.Text>\n                                            <Card.Text>{movie.plot}</Card.Text>\n                                            <Link to={\"/movies/\"+movie._id} >View Reviews</Link>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                    <br />\n                    Showing page: {currentPage + 1}.\n                    <Button variant=\"link\" onClick={() => {setCurrentPage(currentPage + 1)}}>\n                        Get next {entriesPerPage} results\n                    </Button>\n            </Container>\n        </div>\n    );\n}\n\nexport default MoviesList;","/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/components/login.js",[],[],"/home/cambam/Desktop/dev/mern/movieReviewApp/movie-reviews/frontend/src/services/movies.js",[],[],{"ruleId":"50","severity":1,"message":"51","line":35,"column":19,"nodeType":"52","endLine":35,"endColumn":39},{"ruleId":"53","severity":1,"message":"54","line":1,"column":37,"nodeType":"55","messageId":"56","endLine":1,"endColumn":48},{"ruleId":"57","severity":1,"message":"58","line":28,"column":7,"nodeType":"59","endLine":28,"endColumn":20,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":42,"column":8,"nodeType":"59","endLine":42,"endColumn":10,"suggestions":"62"},{"ruleId":"57","severity":1,"message":"61","line":46,"column":8,"nodeType":"59","endLine":46,"endColumn":21,"suggestions":"63"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveNextPage'. Either include it or remove the dependency array.","ArrayExpression",["64"],"React Hook useEffect has a missing dependency: 'retrieveMovies'. Either include it or remove the dependency array.",["65"],["66"],{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [currentPage, retrieveNextPage]",{"range":"73","text":"74"},"Update the dependencies array to be: [retrieveMovies]",{"range":"75","text":"76"},"Update the dependencies array to be: [currentPage, retrieveMovies]",{"range":"77","text":"78"},[977,990],"[currentPage, retrieveNextPage]",[1316,1318],"[retrieveMovies]",[1381,1394],"[currentPage, retrieveMovies]"]